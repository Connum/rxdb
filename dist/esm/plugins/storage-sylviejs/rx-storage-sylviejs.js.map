{"version":3,"file":"rx-storage-sylviejs.js","names":["createSylvieStorageInstance","RX_STORAGE_NAME_SYLVIEJS","ensureRxStorageInstanceParamsAreCorrect","RXDB_VERSION","RxStorageSylvie","databaseSettings","name","rxdbVersion","leaderElectorBySylvieDbName","Map","_proto","prototype","createStorageInstance","params","getRxStorageSylvie","storage"],"sources":["../../../../src/plugins/storage-sylviejs/rx-storage-sylviejs.ts"],"sourcesContent":["import type {\n    SylvieDatabaseSettings,\n    SylvieSettings,\n    SylvieStorageInternals,\n    RxStorage,\n    RxStorageInstanceCreationParams\n} from '../../types/index.d.ts';\nimport {\n    createSylvieStorageInstance,\n    RxStorageInstanceSylvie\n} from './rx-storage-instance-sylvie.ts';\nimport { RX_STORAGE_NAME_SYLVIEJS } from './sylviejs-helper.ts';\nimport type { LeaderElector } from 'broadcast-channel';\n\nimport { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper.ts';\nimport { RXDB_VERSION } from '../utils/utils-rxdb-version.ts';\n\nexport class RxStorageSylvie implements RxStorage<SylvieStorageInternals, SylvieSettings> {\n    public name = RX_STORAGE_NAME_SYLVIEJS;\n    public readonly rxdbVersion = RXDB_VERSION;\n\n    /**\n     * Create one leader elector by db name.\n     * This is done inside of the storage, not globally\n     * to make it easier to test multi-tab behavior.\n     */\n    public leaderElectorBySylvieDbName: Map<string, {\n        leaderElector: LeaderElector;\n        /**\n         * Count the instances that currently use the elector.\n         * If is goes to zero again, the elector can be closed.\n         */\n        instancesCount: number;\n    }> = new Map();\n\n    constructor(\n        public databaseSettings: SylvieDatabaseSettings\n    ) { }\n\n    public createStorageInstance<RxDocType>(\n        params: RxStorageInstanceCreationParams<RxDocType, SylvieSettings>\n    ): Promise<RxStorageInstanceSylvie<RxDocType>> {\n        ensureRxStorageInstanceParamsAreCorrect(params);\n        return createSylvieStorageInstance(this, params, this.databaseSettings);\n    }\n}\n\nexport function getRxStorageSylvie(\n    databaseSettings: SylvieDatabaseSettings = {}\n): RxStorageSylvie {\n    const storage = new RxStorageSylvie(databaseSettings);\n    return storage;\n}\n"],"mappings":"AAOA,SACIA,2BAA2B,QAExB,iCAAiC;AACxC,SAASC,wBAAwB,QAAQ,sBAAsB;AAG/D,SAASC,uCAAuC,QAAQ,4BAA4B;AACpF,SAASC,YAAY,QAAQ,gCAAgC;AAE7D,WAAaC,eAAe;EAIxB;AACJ;AACA;AACA;AACA;;EAUI,SAAAA,gBACWC,gBAAwC,EACjD;IAAA,KAnBKC,IAAI,GAAGL,wBAAwB;IAAA,KACtBM,WAAW,GAAGJ,YAAY;IAAA,KAOnCK,2BAA2B,GAO7B,IAAIC,GAAG,CAAC,CAAC;IAAA,KAGHJ,gBAAwC,GAAxCA,gBAAwC;EAC/C;EAAC,IAAAK,MAAA,GAAAN,eAAA,CAAAO,SAAA;EAAAD,MAAA,CAEEE,qBAAqB,GAA5B,SAAAA,sBACIC,MAAkE,EACvB;IAC3CX,uCAAuC,CAACW,MAAM,CAAC;IAC/C,OAAOb,2BAA2B,CAAC,IAAI,EAAEa,MAAM,EAAE,IAAI,CAACR,gBAAgB,CAAC;EAC3E,CAAC;EAAA,OAAAD,eAAA;AAAA;AAGL,OAAO,SAASU,kBAAkBA,CAC9BT,gBAAwC,GAAG,CAAC,CAAC,EAC9B;EACf,IAAMU,OAAO,GAAG,IAAIX,eAAe,CAACC,gBAAgB,CAAC;EACrD,OAAOU,OAAO;AAClB","ignoreList":[]}